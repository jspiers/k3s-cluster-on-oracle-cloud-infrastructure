
# provider "oci" {
#   tenancy_ocid = local.tenancy
#   user_ocid    = local.user
#   fingerprint  = local.fingerprint
#   # private_key  = file(var.oci_private_key_path)
#   region = local.region
# }

data "oci_identity_availability_domains" "ads" {
  compartment_id = var.compartment_id
}

locals {
  availability_domain = data.oci_identity_availability_domains.ads.availability_domains[0].name
  # Ubuntu 20.04 for Arm64 (see https://docs.oracle.com/en-us/iaas/images/image/e4595be5-2650-45fb-8044-a6d262554c5b/)
  # oci_image_ubuntu_20_04_aarch64_montreal = "ocid1.image.oc1.ca-montreal-1.aaaaaaaadfhn7j3u54zzeee3yypjobjisip3kyzvw5tkbkpnqy2o3t3yvola"
}

# output "availability_domains" {
#   value = data.oci_identity_availability_domains.ads.availability_domains[*].name
# }

resource "oci_identity_compartment" "k3s_cluster" {
  compartment_id = var.compartment_id
  description    = "Terraform-created resources"
  name           = "k3s_cluster"
  freeform_tags  = var.custom_tags
}

module "k3s_cluster" {
  source              = "./k3s-cluster"
  tenancy_id          = var.tenancy_id
  compartment_id      = var.compartment_id
  region              = var.region
  availability_domain = local.availability_domain
  ssh_public_key      = file(var.ssh_authorized_keys_paths[0])
  # os_image_id         = local.oci_image_ubuntu_20_04_aarch64_montreal
  custom_tags = var.custom_tags
  k3s_version = var.k3s_version
}

output "k3s_cluster" {
  value     = module.k3s_cluster
  sensitive = true
}

variable "custom_tags" {
  type = map(string)
  default = {
    "origin"  = "terraform",
    "project" = "k3s"
  }
}

variable "k3s_version" {
  type        = string
  description = "K3S version"
  default     = "v1.22.6+k3s1"
}
